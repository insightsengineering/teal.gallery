---
name: Check Package Restore ðŸ“¦
on: push
permissions:
  contents: read
jobs:
  main:
    name: Check renv restore
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        directory:
          [
            "RNA-seq",
            "basic-teal",
            "efficacy",
            "exploratory",
            "longitudinal",
            "early-dev",
            "patient-profile",
            "python",
            "safety",
          ]
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Extract R version from lockfile
        run: printf 'R_VERSION=%s\n' "$(jq --raw-output .R.Version ${{ matrix.directory }}/renv.lock)" >> $GITHUB_ENV

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ env.R_VERSION }}

      - name: Setup system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --yes \
            libcurl4-openssl-dev \
            libgdal-dev \
            libproj-dev \
            libudunits2-dev

      - name: Restore renv from cache
        uses: actions/cache@v2
        env:
          CACHE_KEY: renv-${{ runner.arch }}-${{ runner.os }}-${{ env.R_VERSION }}
        with:
          path: renv/library
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('renv.lock') }}
          restore-keys: ${{ env.CACHE_KEY }}-

      - name: Sync renv with lockfile
        shell: Rscript {0}
        run: |
          setwd("${{ matrix.directory }}")
          sys.source(".Rprofile")
          options(renv.config.cache.symlinks = FALSE)
          options(renv.config.install.remotes = FALSE)
          renv::restore(clean = TRUE)
